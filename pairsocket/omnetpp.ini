
# ----------------------------------------------------------------------------
#
# HttpTools Project
#
# This file is a part of the HttpTools project. The project was created at
# Reykjavik University, the Laboratory for Dependable Secure Systems (LDSS).
# Its purpose is to create a set of OMNeT++ components to simulate browsing
# behaviour in a high-fidelity manner along with a highly configurable 
# Web server component.
#
# Maintainer: Kristjan V. Jonsson (LDSS) kristjanvj@gmail.com
# Project home page: code.google.com/p/omnet-httptools
#
# ----------------------------------------------------------------------------
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# ----------------------------------------------------------------------------

#
# Initialization file for the pairs scenario. Sockets version.
#

[General]

network = http.pairsocket.HttpSockPair # Use the sockets version of pair

cmdenv-express-mode = false

tkenv-plugin-path = ../../../../etc/plugins
# tkenv-default-run = 1

sim-time-limit = 100d

# Controller
**.controller.logLevel = 0
**.controller.config = xmldoc("../controller_cfg.xml","//controller-profile[@id='uniform']")
**.controller.events = ""
**.controller.eventsSection = ""

# udp app (off)
**.numUdpApps = 0

# tcp apps
**.cli.numTcpApps = 1
**.cli.tcpApp[0].typename = "PipeHttpBrowser"
**.cli.tcpApp[0].httpProtocol = 11
**.cli.tcpApp[0].logLevel = 2
**.cli.tcpApp[0].logFile = "client.log"
**.cli.tcpApp[0].config = xmldoc("../browser_cfg.xml","//user-profile[@id='normal']")
**.cli.tcpApp[0].activationTime = 0.0
**.cli.tcpApp[0].maxConnections = 256
**.cli.tcpApp[0].maxConnectionsPerHost = 6
**.cli.tcpApp[0].maxPipelinedReqs = 8
**.cli.tcpApp[0].pipeliningMode = 1
**.cli.tcpApp[0].SvrSupportDetect = 1


# Servers
**.srv.numTcpApps = 1
**.srv.tcpApp[0].typename = "PipeHttpServer"
**.srv.tcpApp[0].hostName = "www.single.org"
**.srv.tcpApp[0].port = 80
**.srv.tcpApp[0].httpProtocol = 11
**.srv.tcpApp[0].logLevel = 2
**.srv.tcpApp[0].logFile = "server.log"
**.srv.tcpApp[0].siteDefinition = "" # Use the random page and resource generation
**.srv.tcpApp[0].config = xmldoc("../server_cfg.xml","//server-profile[@id='normal']")
**.srv.tcpApp[0].activationTime = 0.0

# tcp settings
**.tcp.mss = 1460			#default 1024
**.tcp.advertisedWindow = 20440			#default 14336  # 14*mss
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true
# -- add by wangqian, 2012-05-14
**.tcp.delayedAcksEnabled = false
**.tcp.nagleEnabled = true
**.tcp.limitedTransmitEnabled = false
**.tcp.increasedlWEnabled = false
**.tcp.sackSupport = false
**.tcp.windowScalingSupport = false
**.tcp.timestampSupport = false
# --add end


# ip settings
**.routingFile = ""
**.ip.procDelay = 10000us
**.cli.IPForward = false
**.srv.IPForward = false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

# hook names
**.qosBehaviorClass = "EnqueueWithoutQoS"

# nam trace
**.nam.logfile = "trace.nam"
**.nam.prolog = ""
**.namid = -1  # auto

[Config random]
# Random browse events and page generation.
**.cli.tcpApp[0].scriptFile = "" # Script file disabled
**.srv.tcpApp[0].siteDefinition = "" # Use the random page and resource generation


[Config scripted]
# The single server uses a scripted site definition. The browser executes scripted
# events which request valid pages from the server. This should result in only valid 
# responses.
**.cli.tcpApp[0].scriptFile = "browse.script"
**.cli.tcpApp[0].reconnectInterval = 0 # TODO: CHECK USE
**.srv.tcpApp[0].siteDefinition = "../../sites/www_single_org/www_single_org.sitedef"

[Config scripted-bad]
# The single server uses a scripted site definition. The browser executes scripted
# events which request non-existent pages from the server. This should be answered by 
# 404 replies.
**.cli.tcpApp[0].scriptFile = "bad-browse.script"
**.cli.tcpApp[0].reconnectInterval = 0 # TODO: CHECK USE
**.srv.tcpApp[0].siteDefinition = "../../sites/www_single_org/www_single_org.sitedef"

[Config scripted-cross]
# The single server uses a scripted site definition. The browser executes scripted
# events which request a page from the server which contains references to resources
# on a non-existent server. This should fail gracefully.
**.cli.tcpApp[0].scriptFile = "cross-browse.script"
**.cli.tcpApp[0].reconnectInterval = 0 # TODO: CHECK USE
**.srv.tcpApp[0].siteDefinition = "../../sites/www_single_org/www_single_org.sitedef"
